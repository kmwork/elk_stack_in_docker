version: '3.2'
## система логов в докерах
services:
  elasticsearch:
    image: elasticsearch:$ELK_VERSION
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx2048m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - network_elk

  logstash_dev:
    image: logstash:$ELK_VERSION
    restart: always
    build:
      context: logstash_dev/
      args:
        ELK_VERSION: $ELK_VERSION
        DEV_KAFKA_TOPIC_NAME: $DEV_KAFKA_TOPIC_NAME
        DEV_KAFKA_ADDRESS: $DEV_KAFKA_ADDRESS
        DEV_ELK_INDEX_PATTERN: $DEV_ELK_INDEX_PATTERN

    volumes:
      - type: bind
        source: ./logstash/config/autotest_logstash.yml
        target: /usr/share/logstash/config/autotest_logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline/dev_logstash_stand.conf
        target: /usr/share/logstash/pipeline/logstash.conf
        read_only: true
    depends_on:
      - elasticsearch
    environment:
      BOOTSTRAP_SERVERS: $DEV_KAFKA_ADDRESS
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - network_elk
  logstash_test:
    image: logstash:$ELK_VERSION
    restart: always
    build:
      context: logstash_test/
      args:
        ELK_VERSION: $ELK_VERSION
        TEST_KAFKA_TOPIC_NAME: $TEST_KAFKA_TOPIC_NAME
        TEST_KAFKA_ADDRESS: $TEST_KAFKA_ADDRESS
        TEST_ELK_INDEX_PATTERN: $TEST_ELK_INDEX_PATTERN
    volumes:
      - type: bind
        source: ./logstash/config/autotest_logstash.yml
        target: /usr/share/logstash/config/autotest_logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline/test_logstash_stand.conf
        target: /usr/share/logstash/pipeline/logstash.conf
        read_only: true
    depends_on:
      - elasticsearch
    environment:
      BOOTSTRAP_SERVERS: $TEST_KAFKA_ADDRESS
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - network_elk
    logstash_autotest:
      image: logstash:$ELK_VERSION
      restart: always
      build:
        context: logstash_autotest/
        args:
          ELK_VERSION: $ELK_VERSION
          TEST_KAFKA_TOPIC_NAME: $TEST_KAFKA_TOPIC_NAME
          TEST_KAFKA_ADDRESS: $TEST_KAFKA_ADDRESS
          TEST_ELK_INDEX_PATTERN: $TEST_ELK_INDEX_PATTERN
      volumes:
        - type: bind
          source: ./logstash/config/autotest_logstash.yml
          target: /usr/share/logstash/config/dev_logstash.yml
          read_only: true
        - type: bind
          source: ./logstash/pipeline/auto_logstash_stand.conf
          target: /usr/share/logstash/pipeline/logstash.conf
          read_only: true
      depends_on:
        - elasticsearch
      environment:
        BOOTSTRAP_SERVERS: $TEST_KAFKA_ADDRESS
        LS_JAVA_OPTS: "-Xmx256m -Xms256m"
      networks:
        - network_elk
  kibana:
    image: kibana:$ELK_VERSION
    restart: always
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - network_elk

networks:
  network_elk:
    driver: bridge
volumes:
  elasticsearch:
    driver: local